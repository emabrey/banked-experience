/*
 * Copyright (c) 2019, TheStonedTurtle <https://github.com/TheStonedTurtle>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package thestonedturtle.bankedexperience.data;

import com.google.common.collect.ArrayListMultimap;
import com.google.common.collect.Multimap;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import lombok.Getter;
import lombok.Setter;
import net.runelite.api.ItemComposition;
import net.runelite.api.gameval.ItemID;
import net.runelite.api.Skill;
import net.runelite.client.game.ItemManager;

/**
 *
 */
@Getter
public enum ExperienceItem 
{
	/**
	 * Construction
	 */
	// Logs
	LOGS(ItemID.LOGS, Skill.CONSTRUCTION, "Logs"),
	OAK_LOGS(ItemID.OAK_LOGS, Skill.CONSTRUCTION, "Logs"),
	TEAK_LOGS(ItemID.TEAK_LOGS, Skill.CONSTRUCTION, "Logs"),
	MAHOGANY_LOGS(ItemID.MAHOGANY_LOGS, Skill.CONSTRUCTION, "Logs"),
	// Planks
	PLANK(ItemID.WOODPLANK, Skill.CONSTRUCTION, "Planks"),
	OAK_PLANK(ItemID.PLANK_OAK, Skill.CONSTRUCTION, "Planks"),
	TEAK_PLANK(ItemID.PLANK_TEAK, Skill.CONSTRUCTION, "Planks"),
	MAHOGANY_PLANK(ItemID.PLANK_MAHOGANY, Skill.CONSTRUCTION, "Planks"),
	// Other
	LONG_BONE(ItemID.DORGESH_CONSTRUCTION_BONE, Skill.CONSTRUCTION, "Other"),
	CURVED_BONE(ItemID.DORGESH_CONSTRUCTION_BONE_CURVED, Skill.CONSTRUCTION, "Other"),
	/**
	 * Herblore
	 */
	// Grimy Herbs
	GRIMY_GUAM_LEAF(ItemID.UNIDENTIFIED_GUAM, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_MARRENTILL(ItemID.UNIDENTIFIED_MARENTILL, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_TARROMIN(ItemID.UNIDENTIFIED_TARROMIN, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_HARRALANDER(ItemID.UNIDENTIFIED_HARRALANDER, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_RANARR_WEED(ItemID.UNIDENTIFIED_RANARR, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_TOADFLAX(ItemID.UNIDENTIFIED_TOADFLAX, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_IRIT_LEAF(ItemID.UNIDENTIFIED_IRIT, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_AVANTOE(ItemID.UNIDENTIFIED_AVANTOE, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_KWUARM(ItemID.UNIDENTIFIED_KWUARM, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_SNAPDRAGON(ItemID.UNIDENTIFIED_SNAPDRAGON, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_CADANTINE(ItemID.UNIDENTIFIED_CADANTINE, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_LANTADYME(ItemID.UNIDENTIFIED_LANTADYME, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_DWARF_WEED(ItemID.UNIDENTIFIED_DWARF_WEED, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_TORSTOL(ItemID.UNIDENTIFIED_TORSTOL, Skill.HERBLORE, "Grimy Herbs"),
	GRIMY_HUASCA(ItemID.UNIDENTIFIED_HUASCA, Skill.HERBLORE, "Grimy Herbs"),
	// Clean Herbs
	GUAM_LEAF(ItemID.GUAM_LEAF, Skill.HERBLORE, "Cleaned Herbs"),
	MARRENTILL(ItemID.MARENTILL, Skill.HERBLORE, "Cleaned Herbs"),
	TARROMIN(ItemID.TARROMIN, Skill.HERBLORE, "Cleaned Herbs"),
	HARRALANDER(ItemID.HARRALANDER, Skill.HERBLORE, "Cleaned Herbs"),
	RANARR_WEED(ItemID.RANARR_WEED, Skill.HERBLORE, "Cleaned Herbs"),
	TOADFLAX(ItemID.TOADFLAX, Skill.HERBLORE, "Cleaned Herbs"),
	IRIT_LEAF(ItemID.IRIT_LEAF, Skill.HERBLORE, "Cleaned Herbs"),
	AVANTOE(ItemID.AVANTOE, Skill.HERBLORE, "Cleaned Herbs"),
	KWUARM(ItemID.KWUARM, Skill.HERBLORE, "Cleaned Herbs"),
	SNAPDRAGON(ItemID.SNAPDRAGON, Skill.HERBLORE, "Cleaned Herbs"),
	CADANTINE(ItemID.CADANTINE, Skill.HERBLORE, "Cleaned Herbs"),
	LANTADYME(ItemID.LANTADYME, Skill.HERBLORE, "Cleaned Herbs"),
	DWARF_WEED(ItemID.DWARF_WEED, Skill.HERBLORE, "Cleaned Herbs"),
	TORSTOL(ItemID.TORSTOL, Skill.HERBLORE, "Cleaned Herbs"),
	HUASCA(ItemID.HUASCA, Skill.HERBLORE, "Cleaned Herbs"),
	// Unfinished Potions
	GUAM_POTION_UNF(ItemID.GUAMVIAL, Skill.HERBLORE, "Unfinished Potions"),
	MARRENTILL_POTION_UNF(ItemID.MARRENTILLVIAL, Skill.HERBLORE, "Unfinished Potions"),
	TARROMIN_POTION_UNF(ItemID.TARROMINVIAL, Skill.HERBLORE, "Unfinished Potions"),
	HARRALANDER_POTION_UNF(ItemID.HARRALANDERVIAL, Skill.HERBLORE, "Unfinished Potions"),
	RANARR_POTION_UNF(ItemID.RANARRVIAL, Skill.HERBLORE, "Unfinished Potions"),
	TOADFLAX_POTION_UNF(ItemID.TOADFLAXVIAL, Skill.HERBLORE, "Unfinished Potions"),
	IRIT_POTION_UNF(ItemID.IRITVIAL, Skill.HERBLORE, "Unfinished Potions"),
	AVANTOE_POTION_UNF(ItemID.AVANTOEVIAL, Skill.HERBLORE, "Unfinished Potions"),
	KWUARM_POTION_UNF(ItemID.KWUARMVIAL, Skill.HERBLORE, "Unfinished Potions"),
	SNAPDRAGON_POTION_UNF(ItemID.SNAPDRAGONVIAL, Skill.HERBLORE, "Unfinished Potions"),
	CADANTINE_POTION_UNF(ItemID.CADANTINEVIAL, Skill.HERBLORE, "Unfinished Potions"),
	CADANTINE_BLOOD_POTION_UNF(ItemID.CADANTINE_BLOODVIAL, Skill.HERBLORE, "Unfinished Potions"),
	LANTADYME_POTION_UNF(ItemID.LANTADYMEVIAL, Skill.HERBLORE, "Unfinished Potions"),
	DWARF_WEED_POTION_UNF(ItemID.DWARFWEEDVIAL, Skill.HERBLORE, "Unfinished Potions"),
	TORSTOL_POTION_UNF(ItemID.TORSTOLVIAL, Skill.HERBLORE, "Unfinished Potions"),
	HUASCA_POTION_UNF(ItemID.HUASCAVIAL, Skill.HERBLORE, "Unfinished Potions"),
	// Paste
	MOX_PASTE(ItemID.MM_MOX_PASTE, Skill.HERBLORE, "Paste"),
	AGA_PASTE(ItemID.MM_AGA_PASTE, Skill.HERBLORE, "Paste"),
	LYE_PASTE(ItemID.MM_LYE_PASTE, Skill.HERBLORE, "Paste"),
	// Other
	MARK_OF_GRACE(ItemID.GRACE, Skill.HERBLORE, "Other"),
	AMYLASE_CRYSTAL(ItemID.AMYLASE, Skill.HERBLORE, "Other"),
	LAVA_SCALE_SHARD(ItemID.LAVA_SHARD, Skill.HERBLORE, "Other"),
	EXTENDED_ANTIFIRE4(ItemID._4DOSE2ANTIDRAGON, Skill.HERBLORE),
	ANCIENT_BREW(Skill.HERBLORE, true, ItemID._1DOSEANCIENTBREW, ItemID._2DOSEANCIENTBREW, ItemID._3DOSEANCIENTBREW, ItemID._4DOSEANCIENTBREW),
	ARAXYTE_VENOM_SACK(ItemID.ARAXYTE_VENOM_SACK, Skill.HERBLORE, "Other"),
	ANTIVENOM(Skill.HERBLORE, true, ItemID.ANTIDOTE__1, ItemID.ANTIDOTE__2, ItemID.ANTIDOTE__3, ItemID.ANTIDOTE__4),
	// Coconut Potions
	ANTIDOTE_PLUS_POTION_UNF(ItemID.UNFINISHED_ANTIDOTE_, Skill.HERBLORE, "Unfinished Potions"),
	ANTIDOTE_PLUS_PLUS_POTION_UNF(ItemID.UNFINISHED_ANTIDOTE__, Skill.HERBLORE, "Unfinished Potions"),
	CACTUS_SPINE(ItemID.CACTUS_SPINE, Skill.HERBLORE, "Other"),
	WEAPON_POISON_PLUS_UNF(ItemID.UNFINISHED_WEAPON_POISON_, Skill.HERBLORE, "Unfinished Potions"),
	CAVE_NIGHTSHADE(ItemID.NIGHTSHADE, Skill.HERBLORE, "Other"),
	NIGHTSHADE(ItemID.NIGHTSHADE, Skill.HERBLORE, "Other"),
	WEAPON_POISON_PLUS_PLUS_UNF(ItemID.UNFINISHED_WEAPON_POISON__, Skill.HERBLORE, "Unfinished Potions"),
	/**
	 * Prayer
	 */
	// Bones
	BONES(ItemID.BONES, Skill.PRAYER, "Bones"),
	WOLF_BONES(ItemID.WOLF_BONES, Skill.PRAYER, "Bones"),
	BURNT_BONES(ItemID.BONES_BURNT, Skill.PRAYER, "Bones"),
	MONKEY_BONES(ItemID.MM_NORMAL_MONKEY_BONES, Skill.PRAYER, "Bones"),
	BAT_BONES(ItemID.BAT_BONES, Skill.PRAYER, "Bones"),
	JOGRE_BONES(ItemID.TBWT_JOGRE_BONES, Skill.PRAYER, "Bones"),
	BIG_BONES(ItemID.BIG_BONES, Skill.PRAYER, "Bones"),
	ZOGRE_BONES(ItemID.ZOGRE_BONES, Skill.PRAYER, "Bones"),
	SHAIKAHAN_BONES(ItemID.TBWT_BEAST_BONES, Skill.PRAYER, "Bones"),
	BABYDRAGON_BONES(ItemID.BABYDRAGON_BONES, Skill.PRAYER, "Bones"),
	WYVERN_BONES(ItemID.WYVERN_BONES, Skill.PRAYER, "Bones"),
	DRAGON_BONES(ItemID.DRAGON_BONES, Skill.PRAYER, "Bones"),
	FAYRG_BONES(ItemID.ZOGRE_ANCESTRAL_BONES_FAYG, Skill.PRAYER, "Bones"),
	LAVA_DRAGON_BONES(ItemID.LAVA_DRAGON_BONES, Skill.PRAYER, "Bones"),
	RAURG_BONES(ItemID.ZOGRE_ANCESTRAL_BONES_RAURG, Skill.PRAYER, "Bones"),
	DAGANNOTH_BONES(ItemID.DAGANNOTH_KING_BONES, Skill.PRAYER, "Bones"),
	OURG_BONES(ItemID.ZOGRE_ANCESTRAL_BONES_OURG, Skill.PRAYER, "Bones"),
	SUPERIOR_DRAGON_BONES(ItemID.DRAGON_BONES_SUPERIOR, Skill.PRAYER, "Bones"),
	WYRM_BONES(ItemID.WYRM_BONES, Skill.PRAYER, "Bones"),
	DRAKE_BONES(ItemID.DRAKE_BONES, Skill.PRAYER, "Bones"),
	HYDRA_BONES(ItemID.HYDRA_BONES, Skill.PRAYER, "Bones"),
	WYRMLING_BONES(ItemID.BABYWYRM_BONES, Skill.PRAYER, "Other"),
	// Blessed bones
	SUNKISSED_BONES(ItemID.SUN_KISSED_BONE, Skill.PRAYER, "Bones"),
	BLESSED_BONE_SHARDS(ItemID.BLESSED_BONE_SHARD, Skill.PRAYER, "Bones"),
	BLESSED_BONES(ItemID.BLESSED_BONES, Skill.PRAYER, "Bones"),
	BLESSED_BAT_BONES(ItemID.BLESSED_BAT_BONES, Skill.PRAYER, "Bones"),
	BLESSED_BIG_BONES(ItemID.BLESSED_BIG_BONES, Skill.PRAYER, "Bones"),
	BLESSED_ZOGRE_BONES(ItemID.BLESSED_ZOGRE_BONES, Skill.PRAYER, "Bones"),
	BLESSED_BABYDRAGON_BONES(ItemID.BLESSED_BABYDRAGON_BONES, Skill.PRAYER, "Bones"),
	BLESSED_DRAGON_BONES(ItemID.BLESSED_DRAGON_BONES, Skill.PRAYER, "Bones"),
	BLESSED_LAVA_DRAGON_BONES(ItemID.BLESSED_LAVA_DRAGON_BONES, Skill.PRAYER, "Bones"),
	BLESSED_WYVERN_BONES(ItemID.BLESSED_WYVERN_BONES, Skill.PRAYER, "Bones"),
	BLESSED_SUPERIOR_DRAGON_BONES(ItemID.BLESSED_DRAGON_BONES_SUPERIOR, Skill.PRAYER, "Bones"),
	BLESSED_WYRM_BONES(ItemID.BLESSED_WYRM_BONES, Skill.PRAYER, "Bones"),
	BLESSED_DRAKE_BONES(ItemID.BLESSED_DRAKE_BONES, Skill.PRAYER, "Bones"),
	BLESSED_HYDRA_BONES(ItemID.BLESSED_HYDRA_BONES, Skill.PRAYER, "Bones"),
	BLESSED_FAYRG_BONES(ItemID.BLESSED_FAYRG_BONES, Skill.PRAYER, "Bones"),
	BLESSED_RAURG_BONES(ItemID.BLESSED_RAURG_BONES, Skill.PRAYER, "Bones"),
	BLESSED_OURG_BONES(ItemID.BLESSED_OURG_BONES, Skill.PRAYER, "Bones"),
	DAGANNOTH_BONES_29376(ItemID.BLESSED_DAGANNOTH_BONES, Skill.PRAYER, "Bones"),
	BLESSED_BONE_STATUETTE(ItemID.VARLAMORE_BONE_STATUETTE01, Skill.PRAYER, "Bones"),
	BLESSED_BONE_STATUETTE_29340(ItemID.VARLAMORE_BONE_STATUETTE02, Skill.PRAYER, "Bones"),
	BLESSED_BONE_STATUETTE_29342(ItemID.VARLAMORE_BONE_STATUETTE03, Skill.PRAYER, "Bones"),
	BLESSED_BABYWYRM_BONES(ItemID.BLESSED_BABYWYRM_BONES, Skill.PRAYER, "Other"),
	// Bonemeal
	BONEMEAL(ItemID.POT_BONEMEAL, Skill.PRAYER, "Bonemeal"),
	WOLF_BONEMEAL(ItemID.POT_BONEMEAL_WOLF, Skill.PRAYER, "Bonemeal"),
	BURNT_BONEMEAL(ItemID.POT_BONEMEAL_BURNT, Skill.PRAYER, "Bonemeal"),
	MONKEY_BONEMEAL(ItemID.POT_BONEMEAL_NORMAL_MONKEY, Skill.PRAYER, "Bonemeal"),
	BAT_BONEMEAL(ItemID.POT_BONEMEAL_BAT, Skill.PRAYER, "Bonemeal"),
	JOGRE_BONEMEAL(ItemID.POT_BONEMEAL_JOGRE, Skill.PRAYER, "Bonemeal"),
	BIG_BONEMEAL(ItemID.POT_BONEMEAL_BIG, Skill.PRAYER, "Bonemeal"),
	ZOGRE_BONEMEAL(ItemID.POT_BONEMEAL_ZOGRE, Skill.PRAYER, "Bonemeal"),
	SHAIKAHAN_BONEMEAL(ItemID.POT_BONEMEAL_BEAST, Skill.PRAYER, "Bonemeal"),
	BABYDRAGON_BONEMEAL(ItemID.POT_BONEMEAL_BABYDRAGON, Skill.PRAYER, "Bonemeal"),
	WYVERN_BONEMEAL(ItemID.POT_BONEMEAL_WYVERN, Skill.PRAYER, "Bonemeal"),
	DRAGON_BONEMEAL(ItemID.POT_BONEMEAL_DRAGON, Skill.PRAYER, "Bonemeal"),
	FAYRG_BONEMEAL(ItemID.POT_BONEMEAL_ANCESTRAL_FAYG, Skill.PRAYER, "Bonemeal"),
	LAVA_DRAGON_BONEMEAL(ItemID.POT_BONEMEAL_LAVADRAGON, Skill.PRAYER, "Bonemeal"),
	RAURG_BONEMEAL(ItemID.POT_BONEMEAL_ANCESTRAL_RAURG, Skill.PRAYER, "Bonemeal"),
	DAGANNOTH_BONEMEAL(ItemID.POT_BONEMEAL_DAGANNOTH, Skill.PRAYER, "Bonemeal"),
	OURG_BONEMEAL(ItemID.POT_BONEMEAL_ANCESTRAL_OURG, Skill.PRAYER, "Bonemeal"),
	SUPERIOR_DRAGON_BONEMEAL(ItemID.POT_BONEMEAL_DRAGON_SUPERIOR, Skill.PRAYER, "Bonemeal"),
	WYRM_BONEMEAL(ItemID.POT_BONEMEAL_WYRM, Skill.PRAYER, "Bonemeal"),
	DRAKE_BONEMEAL(ItemID.POT_BONEMEAL_DRAKE, Skill.PRAYER, "Bonemeal"),
	HYDRA_BONEMEAL(ItemID.POT_BONEMEAL_HYDRA, Skill.PRAYER, "Bonemeal"),
	// Shade Remains (Pyre Logs)
	LOAR_REMAINS(ItemID.SHADE_BONES1, Skill.PRAYER, "Shades"),
	PHRIN_REMAINS(ItemID.SHADE_BONES2, Skill.PRAYER, "Shades"),
	RIYL_REMAINS(ItemID.SHADE_BONES3, Skill.PRAYER, "Shades"),
	ASYN_REMAINS(ItemID.SHADE_BONES4, Skill.PRAYER, "Shades"),
	FIYR_REMAINS(ItemID.SHADE_BONES5, Skill.PRAYER, "Shades"),
	// Ensouled Heads
	ENSOULED_GOBLIN_HEAD(ItemID.ARCEUUS_CORPSE_GOBLIN, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_MONKEY_HEAD(ItemID.ARCEUUS_CORPSE_MONKEY, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_IMP_HEAD(ItemID.ARCEUUS_CORPSE_IMP, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_MINOTAUR_HEAD(ItemID.ARCEUUS_CORPSE_MINOTAUR, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_SCORPION_HEAD(ItemID.ARCEUUS_CORPSE_SCORPION, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_BEAR_HEAD(ItemID.ARCEUUS_CORPSE_BEAR, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_UNICORN_HEAD(ItemID.ARCEUUS_CORPSE_UNICORN, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_DOG_HEAD(ItemID.ARCEUUS_CORPSE_DOG, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_CHAOS_DRUID_HEAD(ItemID.ARCEUUS_CORPSE_CHAOSDRUID, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_GIANT_HEAD(ItemID.ARCEUUS_CORPSE_GIANT, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_OGRE_HEAD(ItemID.ARCEUUS_CORPSE_OGRE, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_ELF_HEAD(ItemID.ARCEUUS_CORPSE_ELF, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_TROLL_HEAD(ItemID.ARCEUUS_CORPSE_TROLL, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_HORROR_HEAD(ItemID.ARCEUUS_CORPSE_HORROR, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_KALPHITE_HEAD(ItemID.ARCEUUS_CORPSE_KALPHITE, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_DAGANNOTH_HEAD(ItemID.ARCEUUS_CORPSE_DAGANNOTH, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_BLOODVELD_HEAD(ItemID.ARCEUUS_CORPSE_BLOODVELD, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_TZHAAR_HEAD(ItemID.ARCEUUS_CORPSE_TZHAAR, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_DEMON_HEAD(ItemID.ARCEUUS_CORPSE_DEMON, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_HELLHOUND_HEAD(ItemID.ARCEUUS_CORPSE_HELLHOUND, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_AVIANSIE_HEAD(ItemID.ARCEUUS_CORPSE_AVIANSIE, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_ABYSSAL_HEAD(ItemID.ARCEUUS_CORPSE_ABYSSAL, Skill.PRAYER, "Ensouled Heads"),
	ENSOULED_DRAGON_HEAD(ItemID.ARCEUUS_CORPSE_DRAGON, Skill.PRAYER, "Ensouled Heads"),
	// Fossils
	SMALL_LIMBS(ItemID.FOSSIL_SMALL_1, Skill.PRAYER, "Fossils"),
	SMALL_SPINE(ItemID.FOSSIL_SMALL_2, Skill.PRAYER, "Fossils"),
	SMALL_RIBS(ItemID.FOSSIL_SMALL_3, Skill.PRAYER, "Fossils"),
	SMALL_PELVIS(ItemID.FOSSIL_SMALL_4, Skill.PRAYER, "Fossils"),
	SMALL_SKULL(ItemID.FOSSIL_SMALL_5, Skill.PRAYER, "Fossils"),
	SMALL_FOSSIL(ItemID.FOSSIL_SMALL_UNID, Skill.PRAYER, "Fossils"),
	MEDIUM_LIMBS(ItemID.FOSSIL_MEDIUM_1, Skill.PRAYER, "Fossils"),
	MEDIUM_SPINE(ItemID.FOSSIL_MEDIUM_2, Skill.PRAYER, "Fossils"),
	MEDIUM_RIBS(ItemID.FOSSIL_MEDIUM_3, Skill.PRAYER, "Fossils"),
	MEDIUM_PELVIS(ItemID.FOSSIL_MEDIUM_4, Skill.PRAYER, "Fossils"),
	MEDIUM_SKULL(ItemID.FOSSIL_MEDIUM_5, Skill.PRAYER, "Fossils"),
	MEDIUM_FOSSIL(ItemID.FOSSIL_MEDIUM_UNID, Skill.PRAYER, "Fossils"),
	LARGE_LIMBS(ItemID.FOSSIL_LARGE_1, Skill.PRAYER, "Fossils"),
	LARGE_SPINE(ItemID.FOSSIL_LARGE_2, Skill.PRAYER, "Fossils"),
	LARGE_RIBS(ItemID.FOSSIL_LARGE_3, Skill.PRAYER, "Fossils"),
	LARGE_PELVIS(ItemID.FOSSIL_LARGE_4, Skill.PRAYER, "Fossils"),
	LARGE_SKULL(ItemID.FOSSIL_LARGE_5, Skill.PRAYER, "Fossils"),
	LARGE_FOSSIL(ItemID.FOSSIL_LARGE_UNID, Skill.PRAYER, "Fossils"),
	RARE_LIMBS(ItemID.FOSSIL_RARE_1, Skill.PRAYER, "Fossils"),
	RARE_SPINE(ItemID.FOSSIL_RARE_2, Skill.PRAYER, "Fossils"),
	RARE_RIBS(ItemID.FOSSIL_RARE_3, Skill.PRAYER, "Fossils"),
	RARE_PELVIS(ItemID.FOSSIL_RARE_4, Skill.PRAYER, "Fossils"),
	RARE_SKULL(ItemID.FOSSIL_RARE_5, Skill.PRAYER, "Fossils"),
	RARE_TUSK(ItemID.FOSSIL_RARE_6, Skill.PRAYER, "Fossils"),
	RARE_FOSSIL(ItemID.FOSSIL_RARE_UNID, Skill.PRAYER, "Fossils"),
	// Ashes
	FIENDISH_ASHES(ItemID.FIENDISH_ASHES, Skill.PRAYER, "Ashes"),
	VILE_ASHES(ItemID.VILE_ASHES, Skill.PRAYER, "Ashes"),
	MALICIOUS_ASHES(ItemID.MALICIOUS_ASHES, Skill.PRAYER, "Ashes"),
	ABYSSAL_ASHES(ItemID.ABYSSAL_ASHES, Skill.PRAYER, "Ashes"),
	INFERNAL_ASHES(ItemID.INFERNAL_ASHES, Skill.PRAYER, "Ashes"),
	// Bird Eggs
	BIRD_EGG_NEST_RED(ItemID.BIRD_NEST_EGG_RED, Skill.PRAYER),
	BIRD_EGG_NEST_BLUE(ItemID.BIRD_NEST_EGG_BLUE, Skill.PRAYER),
	BIRD_EGG_NEST_GREEN(ItemID.BIRD_NEST_EGG_GREEN, Skill.PRAYER),
	BIRD_EGG_RED(ItemID.BIRD_EGG_RED, Skill.PRAYER),
	BIRD_EGG_BLUE(ItemID.BIRD_EGG_BLUE, Skill.PRAYER),
	BIRD_EGG_GREEN(ItemID.BIRD_EGG_GREEN, Skill.PRAYER),
	// Slayer Trophies
	CRAWLING_HAND(ItemID.POH_TROPHYDROP_CRAWLINGHAND, Skill.PRAYER),
	COCKATRICE_HEAD(ItemID.POH_TROPHYDROP_COCKATRICE, Skill.PRAYER),
	BASILISK_HEAD(ItemID.POH_TROPHYDROP_BASILISK, Skill.PRAYER),
	KURASK_HEAD(ItemID.POH_TROPHYDROP_KURASK, Skill.PRAYER),
	ABYSSAL_HEAD(ItemID.POH_TROPHYDROP_ABYSSALDEMON, Skill.PRAYER),
	KBD_HEADS(ItemID.POH_TROPHYDROP_KBD, Skill.PRAYER),
	KQ_HEAD(ItemID.POH_TROPHYDROP_KALPHITEQUEEN, Skill.PRAYER),
	VORKATHS_HEAD(ItemID.VORKATH_HEAD, Skill.PRAYER),
	ALCHEMICAL_HYDRA_HEADS(ItemID.POH_ALCHEMICAL_HYDRA_HEAD, Skill.PRAYER),
	/**
	 * Cooking
	 */
	RAW_BEEF(ItemID.RAW_BEEF, Skill.COOKING, "Meat"),
	RAW_RAT_MEAT(ItemID.RAW_RAT_MEAT, Skill.COOKING, "Meat"),
	RAW_BEAR_MEAT(ItemID.RAW_BEAR_MEAT, Skill.COOKING, "Meat"),
	RAW_YAK_MEAT(ItemID.YAK_MEAT_RAW, Skill.COOKING, "Meat"),
	RAW_UGTHANKI_MEAT(ItemID.RAW_UGTHANKI_MEAT, Skill.COOKING, "Meat"),
	RAW_CHICKEN(ItemID.RAW_CHICKEN, Skill.COOKING, "Meat"),
	RAW_RABBIT(ItemID.RAW_RABBIT, Skill.COOKING, "Meat"),
	RAW_SHRIMPS(ItemID.RAW_SHRIMP, Skill.COOKING, "Fish"),
	RAW_SARDINE(ItemID.RAW_SARDINE, Skill.COOKING, "Fish"),
	RAW_ANCHOVIES(ItemID.RAW_ANCHOVIES, Skill.COOKING, "Fish"),
	RAW_HERRING(ItemID.RAW_HERRING, Skill.COOKING, "Fish"),
	RAW_MACKEREL(ItemID.RAW_MACKEREL, Skill.COOKING, "Fish"),
	RAW_BIRD_MEAT(ItemID.SPIT_RAW_BIRD_MEAT, Skill.COOKING, "Meat"),
	THIN_SNAIL(ItemID.SNAIL_CORPSE1, Skill.COOKING, "Meat"),
	RAW_TROUT(ItemID.RAW_TROUT, Skill.COOKING, "Fish"),
	LEAN_SNAIL(ItemID.SNAIL_CORPSE2, Skill.COOKING, "Meat"),
	RAW_COD(ItemID.RAW_COD, Skill.COOKING, "Fish"),
	RAW_PIKE(ItemID.RAW_PIKE, Skill.COOKING, "Fish"),
	FAT_SNAIL(ItemID.SNAIL_CORPSE3, Skill.COOKING, "Meat"),
	RAW_BEAST_MEAT(ItemID.SPIT_RAW_BEAST_MEAT, Skill.COOKING, "Meat"),
	RAW_SALMON(ItemID.RAW_SALMON, Skill.COOKING, "Fish"),
	RAW_TUNA(ItemID.RAW_TUNA, Skill.COOKING, "Fish"),
	RAW_RAINBOW_FISH(ItemID.HUNTING_RAW_FISH_SPECIAL, Skill.COOKING, "Fish"),
	RAW_KARAMBWAN(ItemID.TBWT_RAW_KARAMBWAN, Skill.COOKING, "Fish"),
	RAW_LOBSTER(ItemID.RAW_LOBSTER, Skill.COOKING, "Fish"),
	RAW_BASS(ItemID.RAW_BASS, Skill.COOKING, "Fish"),
	RAW_SWORDFISH(ItemID.RAW_SWORDFISH, Skill.COOKING, "Fish"),
	RAW_MONKFISH(ItemID.RAW_MONKFISH, Skill.COOKING, "Fish"),
	RAW_SHARK(ItemID.RAW_SHARK, Skill.COOKING, "Fish"),
	RAW_SEA_TURTLE(ItemID.RAW_SEATURTLE, Skill.COOKING, "Fish"),
	RAW_ANGLERFISH(ItemID.RAW_ANGLERFISH, Skill.COOKING, "Fish"),
	RAW_DARK_CRAB(ItemID.RAW_DARK_CRAB, Skill.COOKING, "Fish"),
	RAW_MANTA_RAY(ItemID.RAW_MANTARAY, Skill.COOKING, "Fish"),
	GRAPES(ItemID.GRAPES, Skill.COOKING, "Other"),
	SWEETCORN(ItemID.SWEETCORN, Skill.COOKING, "Other"),
	UNCOOKED_STEW(ItemID.UNCOOKED_STEW, Skill.COOKING, "Other"),
	UNCOOKED_CURRY(ItemID.UNCOOKED_CURRY, Skill.COOKING, "Other"),
	RAW_WILD_KEBBIT(ItemID.HUNTINGBEAST_WILD_MEAT, Skill.COOKING, "Meat"),
	RAW_LARUPIA(ItemID.HUNTING_LARUPIA_MEAT, Skill.COOKING, "Meat"),
	RAW_BARBTAILED_KEBBIT(ItemID.HUNTINGBEAST_BARBED_MEAT, Skill.COOKING, "Meat"),
	RAW_GRAAHK(ItemID.HUNTING_GRAAHK_MEAT, Skill.COOKING, "Meat"),
	RAW_KYATT(ItemID.HUNTING_KYATT_MEAT, Skill.COOKING, "Meat"),
	RAW_PYRE_FOX(ItemID.HUNTING_FENNECFOX_MEAT, Skill.COOKING, "Meat"),
	RAW_SUNLIGHT_ANTELOPE(ItemID.HUNTING_ANTELOPESUN_MEAT, Skill.COOKING, "Meat"),
	RAW_DASHING_KEBBIT(ItemID.HUNTINGBEAST_SPEEDY2_MEAT, Skill.COOKING, "Meat"),
	RAW_MOONLIGHT_ANTELOPE(ItemID.HUNTING_ANTELOPEMOON_MEAT, Skill.COOKING, "Meat"),
	/**
	 * Crafting
	 */
	WOOL(ItemID.WOOL, Skill.CRAFTING, "Misc"),
	FLAX(ItemID.FLAX, Skill.CRAFTING, "Misc"),
	MOLTEN_GLASS(ItemID.MOLTEN_GLASS, Skill.CRAFTING, "Misc"),
	BATTLESTAFF(ItemID.BATTLESTAFF, Skill.CRAFTING, "Misc"),
	GOLD_BAR(ItemID.GOLD_BAR, Skill.CRAFTING, "Misc"),
	// Leather
	COW_HIDE(ItemID.COW_HIDE, Skill.CRAFTING, "Leather"),
	LEATHER(ItemID.LEATHER, Skill.CRAFTING, "Leather"),
	HARD_LEATHER(ItemID.HARD_LEATHER, Skill.CRAFTING, "Leather"),
	STEEL_STUDS(ItemID.STUDS, Skill.CRAFTING, "Leather"),

	// D'hide/Dragon Leather
	GREEN_DRAGONHIDE(ItemID.DRAGONHIDE_GREEN, Skill.CRAFTING, "D'hide"),
	GREEN_DRAGON_LEATHER(ItemID.DRAGON_LEATHER, Skill.CRAFTING, "D'hide"),
	BLUE_DRAGONHIDE(ItemID.DRAGONHIDE_BLUE, Skill.CRAFTING, "D'hide"),
	BLUE_DRAGON_LEATHER(ItemID.DRAGON_LEATHER_BLUE, Skill.CRAFTING, "D'hide"),
	RED_DRAGONHIDE(ItemID.DRAGONHIDE_RED, Skill.CRAFTING, "D'hide"),
	RED_DRAGON_LEATHER(ItemID.DRAGON_LEATHER_RED, Skill.CRAFTING, "D'hide"),
	BLACK_DRAGONHIDE(ItemID.DRAGONHIDE_BLACK, Skill.CRAFTING, "D'hide"),
	BLACK_DRAGON_LEATHER(ItemID.DRAGON_LEATHER_BLACK, Skill.CRAFTING, "D'hide"),
	// Uncut Gems
	UNCUT_OPAL(ItemID.UNCUT_OPAL, Skill.CRAFTING, "Gems"),
	UNCUT_JADE(ItemID.UNCUT_JADE, Skill.CRAFTING, "Gems"),
	UNCUT_RED_TOPAZ(ItemID.UNCUT_RED_TOPAZ, Skill.CRAFTING, "Gems"),
	UNCUT_SAPPHIRE(ItemID.UNCUT_SAPPHIRE, Skill.CRAFTING, "Gems"),
	UNCUT_EMERALD(ItemID.UNCUT_EMERALD, Skill.CRAFTING, "Gems"),
	UNCUT_RUBY(ItemID.UNCUT_RUBY, Skill.CRAFTING, "Gems"),
	UNCUT_DIAMOND(ItemID.UNCUT_DIAMOND, Skill.CRAFTING, "Gems"),
	UNCUT_DRAGONSTONE(ItemID.UNCUT_DRAGONSTONE, Skill.CRAFTING, "Gems"),
	UNCUT_ONYX(ItemID.UNCUT_ONYX, Skill.CRAFTING, "Gems"),
	UNCUT_ZENYTE(ItemID.UNCUT_ZENYTE, Skill.CRAFTING, "Gems"),
	// Cut Gems
	OPAL(ItemID.OPAL, Skill.CRAFTING, "Gems"),
	JADE(ItemID.JADE, Skill.CRAFTING, "Gems"),
	RED_TOPAZ(ItemID.RED_TOPAZ, Skill.CRAFTING, "Gems"),
	SAPPHIRE(ItemID.SAPPHIRE, Skill.CRAFTING, "Gems"),
	EMERALD(ItemID.EMERALD, Skill.CRAFTING, "Gems"),
	RUBY(ItemID.RUBY, Skill.CRAFTING, "Gems"),
	DIAMOND(ItemID.DIAMOND, Skill.CRAFTING, "Gems"),
	DRAGONSTONE(ItemID.DRAGONSTONE, Skill.CRAFTING, "Gems"),
	ONYX(ItemID.ONYX, Skill.CRAFTING, "Gems"),
	ZENYTE(ItemID.ZENYTE, Skill.CRAFTING, "Gems"),
	// RNG
	SEAWEED(ItemID.SEAWEED, Skill.CRAFTING, "Misc"),
	SODA_ASH(ItemID.SODA_ASH, Skill.CRAFTING, "Misc"),
	GIANT_SEAWEED(ItemID.GIANT_SEAWEED, Skill.CRAFTING, "Misc"),
	// Other
	SILVER_BAR(ItemID.SILVER_BAR, Skill.CRAFTING, "Other"),
	AMETHYST(ItemID.AMETHYST, Skill.CRAFTING, "Other"),
	SINEW(ItemID.XBOWS_SINEW, Skill.CRAFTING),
	PERFECT_SHELL(ItemID.DORGESH_TORTOISE_SHELL, Skill.CRAFTING, "Other"),
	// Stringing
	UNSTRUNG_SYMBOL(ItemID.NOSTRINGSTAR, Skill.CRAFTING),
	UNSTRUNG_EMBLEM(ItemID.NOSTRINGSNAKE, Skill.CRAFTING),
	GOLD_AMULET_U(ItemID.UNSTRUNG_GOLD_AMULET, Skill.CRAFTING),
	OPAL_AMULET_U(ItemID.UNSTRUNG_OPAL_AMULET, Skill.CRAFTING),
	JADE_AMULET_U(ItemID.UNSTRUNG_JADE_AMULET, Skill.CRAFTING),
	TOPAZ_AMULET_U(ItemID.UNSTRUNG_TOPAZ_AMULET, Skill.CRAFTING),
	SAPPHIRE_AMULET_U(ItemID.UNSTRUNG_SAPPHIRE_AMULET, Skill.CRAFTING),
	EMERALD_AMULET_U(ItemID.UNSTRUNG_EMERALD_AMULET, Skill.CRAFTING),
	RUBY_AMULET_U(ItemID.UNSTRUNG_RUBY_AMULET, Skill.CRAFTING),
	DIAMOND_AMULET_U(ItemID.UNSTRUNG_DIAMOND_AMULET, Skill.CRAFTING),
	DRAGONSTONE_AMULET_U(ItemID.UNSTRUNG_DRAGONSTONE_AMULET, Skill.CRAFTING),
	ONYX_AMULET_U(ItemID.UNSTRUNG_ONYX_AMULET, Skill.CRAFTING),
	ZENYTE_AMULET_U(ItemID.UNSTRUNG_ZENYTE_AMULET, Skill.CRAFTING),
	/**
	 * Smithing
	 */
	// Ores
	IRON_ORE(ItemID.IRON_ORE, Skill.SMITHING, "Ore"),
	SILVER_ORE(ItemID.SILVER_ORE, Skill.SMITHING, "Ore"),
	GOLD_ORE(ItemID.GOLD_ORE, Skill.SMITHING, "Ore"),
	MITHRIL_ORE(ItemID.MITHRIL_ORE, Skill.SMITHING, "Ore"),
	ADAMANTITE_ORE(ItemID.ADAMANTITE_ORE, Skill.SMITHING, "Ore"),
	RUNITE_ORE(ItemID.RUNITE_ORE, Skill.SMITHING, "Ore"),
	// Bars
	BRONZE_BAR(ItemID.BRONZE_BAR, Skill.SMITHING, "Bars"),
	IRON_BAR(ItemID.IRON_BAR, Skill.SMITHING, "Bars"),
	STEEL_BAR(ItemID.STEEL_BAR, Skill.SMITHING, "Bars"),
	MITHRIL_BAR(ItemID.MITHRIL_BAR, Skill.SMITHING, "Bars"),
	ADAMANTITE_BAR(ItemID.ADAMANTITE_BAR, Skill.SMITHING, "Bars"),
	RUNITE_BAR(ItemID.RUNITE_BAR, Skill.SMITHING, "Bars"),
	/**
	 * Farming
	 */
	// Seeds
	ACORN(ItemID.ACORN, Skill.FARMING, "Seeds"),
	WILLOW_SEED(ItemID.WILLOW_SEED, Skill.FARMING, "Seeds"),
	MAPLE_SEED(ItemID.MAPLE_SEED, Skill.FARMING, "Seeds"),
	YEW_SEED(ItemID.YEW_SEED, Skill.FARMING, "Seeds"),
	MAGIC_SEED(ItemID.MAGIC_TREE_SEED, Skill.FARMING, "Seeds"),
	APPLE_TREE_SEED(ItemID.APPLE_TREE_SEED, Skill.FARMING, "Seeds"),
	BANANA_TREE_SEED(ItemID.BANANA_TREE_SEED, Skill.FARMING, "Seeds"),
	ORANGE_TREE_SEED(ItemID.ORANGE_TREE_SEED, Skill.FARMING, "Seeds"),
	CURRY_TREE_SEED(ItemID.CURRY_TREE_SEED, Skill.FARMING, "Seeds"),
	PINEAPPLE_SEED(ItemID.PINEAPPLE_TREE_SEED, Skill.FARMING, "Seeds"),
	PAPAYA_TREE_SEED(ItemID.PAPAYA_TREE_SEED, Skill.FARMING, "Seeds"),
	PALM_TREE_SEED(ItemID.PALM_TREE_SEED, Skill.FARMING, "Seeds"),
	CALQUAT_TREE_SEED(ItemID.CALQUAT_TREE_SEED, Skill.FARMING, "Seeds"),
	TEAK_SEED(ItemID.TEAK_SEED, Skill.FARMING, "Seeds"),
	MAHOGANY_SEED(ItemID.MAHOGANY_SEED, Skill.FARMING, "Seeds"),
	SPIRIT_SEED(ItemID.SPIRIT_TREE_SEED, Skill.FARMING, "Seeds"),
	DRAGONFRUIT_TREE_SEED(ItemID.DRAGONFRUIT_TREE_SEED, Skill.FARMING, "Seeds"),
	CELASTRUS_SEED(ItemID.CELASTRUS_TREE_SEED, Skill.FARMING, "Seeds"),
	REDWOOD_TREE_SEED(ItemID.REDWOOD_TREE_SEED, Skill.FARMING, "Seeds"),
	CRYSTAL_ACORN(ItemID.CRYSTAL_TREE_SEED, Skill.FARMING, "Seeds"),
	HESPORI_SEED(ItemID.HESPORI_SEED, Skill.FARMING, "Seeds"),

	// Saplings
	OAK_SAPLING(ItemID.PLANTPOT_OAK_SAPLING, Skill.FARMING, "Saplings"),
	WILLOW_SAPLING(ItemID.PLANTPOT_WILLOW_SAPLING, Skill.FARMING, "Saplings"),
	MAPLE_SAPLING(ItemID.PLANTPOT_MAPLE_SAPLING, Skill.FARMING, "Saplings"),
	YEW_SAPLING(ItemID.PLANTPOT_YEW_SAPLING, Skill.FARMING, "Saplings"),
	MAGIC_SAPLING(ItemID.PLANTPOT_MAGIC_TREE_SAPLING, Skill.FARMING, "Saplings"),
	APPLE_TREE_SAPLING(ItemID.PLANTPOT_APPLE_SAPLING, Skill.FARMING, "Saplings"),
	BANANA_TREE_SAPLING(ItemID.PLANTPOT_BANANA_SAPLING, Skill.FARMING, "Saplings"),
	ORANGE_TREE_SAPLING(ItemID.PLANTPOT_ORANGE_SAPLING, Skill.FARMING, "Saplings"),
	CURRY_TREE_SAPLING(ItemID.PLANTPOT_CURRY_SAPLING, Skill.FARMING, "Saplings"),
	PINEAPPLE_SAPLING(ItemID.PLANTPOT_PINEAPPLE_SAPLING, Skill.FARMING, "Saplings"),
	PAPAYA_TREE_SAPLING(ItemID.PLANTPOT_PAPAYA_SAPLING, Skill.FARMING, "Saplings"),
	PALM_TREE_SAPLING(ItemID.PLANTPOT_PALM_SAPLING, Skill.FARMING, "Saplings"),
	CALQUAT_TREE_SAPLING(ItemID.PLANTPOT_CALQUAT_SAPLING, Skill.FARMING, "Saplings"),
	TEAK_SAPLING(ItemID.PLANTPOT_TEAK_SAPLING, Skill.FARMING, "Saplings"),
	MAHOGANY_SAPLING(ItemID.PLANTPOT_MAHOGANY_SAPLING, Skill.FARMING, "Saplings"),
	SPIRIT_SAPLING(ItemID.PLANTPOT_SPIRIT_TREE_SAPLING, Skill.FARMING, "Saplings"),
	DRAGONFRUIT_SAPLING(ItemID.PLANTPOT_DRAGONFRUIT_SAPLING, Skill.FARMING, "Saplings"),
	CELASTRUS_SAPLING(ItemID.PLANTPOT_CELASTRUS_TREE_SAPLING, Skill.FARMING, "Saplings"),
	REDWOOD_SAPLING(ItemID.PLANTPOT_REDWOOD_TREE_SAPLING, Skill.FARMING, "Saplings"),
	CRYSTAL_SAPLING(ItemID.PLANTPOT_CRYSTAL_TREE_SAPLING, Skill.FARMING, "Saplings"),
	/**
	 * Fletching
	 */
	// General
	F_ARROW_SHAFT(ItemID.ARROW_SHAFT, Skill.FLETCHING, "Headless arrow"),
	// Logs
	F_LOGS(ItemID.LOGS, Skill.FLETCHING, "Logs"),
	F_OAK_LOGS(ItemID.OAK_LOGS, Skill.FLETCHING, "Logs"),
	F_WILLOW_LOGS(ItemID.WILLOW_LOGS, Skill.FLETCHING, "Logs"),
	F_TEAK_LOGS(ItemID.TEAK_LOGS, Skill.FLETCHING, "Logs"),
	F_MAPLE_LOGS(ItemID.MAPLE_LOGS, Skill.FLETCHING, "Logs"),
	F_MAHOGANY_LOGS(ItemID.MAHOGANY_LOGS, Skill.FLETCHING, "Logs"),
	F_YEW_LOGS(ItemID.YEW_LOGS, Skill.FLETCHING, "Logs"),
	F_MAGIC_LOGS(ItemID.MAGIC_LOGS, Skill.FLETCHING, "Logs"),
	F_REDWOOD_LOGS(ItemID.REDWOOD_LOGS, Skill.FLETCHING, "Logs"),
	// Unstrung
	F_SHORTBOW_U(ItemID.UNSTRUNG_SHORTBOW, Skill.FLETCHING, "Unstrung"),
	F_LONGBOW_U(ItemID.UNSTRUNG_LONGBOW, Skill.FLETCHING, "Unstrung"),
	F_OAK_SHORTBOW_U(ItemID.UNSTRUNG_OAK_SHORTBOW, Skill.FLETCHING, "Unstrung"),
	F_OAK_LONGBOW_U(ItemID.UNSTRUNG_OAK_LONGBOW, Skill.FLETCHING, "Unstrung"),
	F_WILLOW_SHORTBOW_U(ItemID.UNSTRUNG_WILLOW_SHORTBOW, Skill.FLETCHING, "Unstrung"),
	F_WILLOW_LONGBOW_U(ItemID.UNSTRUNG_WILLOW_LONGBOW, Skill.FLETCHING, "Unstrung"),
	F_MAPLE_SHORTBOW_U(ItemID.UNSTRUNG_MAPLE_SHORTBOW, Skill.FLETCHING, "Unstrung"),
	F_MAPLE_LONGBOW_U(ItemID.UNSTRUNG_MAPLE_LONGBOW, Skill.FLETCHING, "Unstrung"),
	F_YEW_SHORTBOW_U(ItemID.UNSTRUNG_YEW_SHORTBOW, Skill.FLETCHING, "Unstrung"),
	F_YEW_LONGBOW_U(ItemID.UNSTRUNG_YEW_LONGBOW, Skill.FLETCHING, "Unstrung"),
	F_MAGIC_SHORTBOW_U(ItemID.UNSTRUNG_MAGIC_SHORTBOW, Skill.FLETCHING, "Unstrung"),
	F_MAGIC_LONGBOW_U(ItemID.UNSTRUNG_MAGIC_LONGBOW, Skill.FLETCHING, "Unstrung"),
	// Darts
	F_BRONZE_DART_TIP(ItemID.BRONZE_DART_TIP, Skill.FLETCHING, "Dart tip"),
	F_IRON_DART_TIP(ItemID.IRON_DART_TIP, Skill.FLETCHING, "Dart tip"),
	F_STEEL_DART_TIP(ItemID.STEEL_DART_TIP, Skill.FLETCHING, "Dart tip"),
	F_MITHRIL_DART_TIP(ItemID.MITHRIL_DART_TIP, Skill.FLETCHING, "Dart tip"),
	F_ADAMANT_DART_TIP(ItemID.ADAMANT_DART_TIP, Skill.FLETCHING, "Dart tip"),
	F_RUNE_DART_TIP(ItemID.RUNE_DART_TIP, Skill.FLETCHING, "Dart tip"),
	F_AMETHYST_DART_TIP(ItemID.AMETHYST_DART_TIP, Skill.FLETCHING, "Dart tip"),
	F_DRAGON_DART_TIP(ItemID.DRAGON_DART_TIP, Skill.FLETCHING, "Dart tip"),
	// Arrows
	F_BRONZE_ARROWTIPS(ItemID.BRONZE_ARROWHEADS, Skill.FLETCHING, "Arrow"),
	F_IRON_ARROWTIPS(ItemID.IRON_ARROWHEADS, Skill.FLETCHING, "Arrow"),
	F_STEEL_ARROWTIPS(ItemID.STEEL_ARROWHEADS, Skill.FLETCHING, "Arrow"),
	F_MITHRIL_ARROWTIPS(ItemID.MITHRIL_ARROWHEADS, Skill.FLETCHING, "Arrow"),
	F_BROAD_ARROWHEADS(ItemID.SLAYER_BROAD_ARROWHEAD, Skill.FLETCHING, "Arrow"),
	F_ADAMANT_ARROWTIPS(ItemID.ADAMANT_ARROWHEADS, Skill.FLETCHING, "Arrow"),
	F_RUNE_ARROWTIPS(ItemID.RUNE_ARROWHEADS, Skill.FLETCHING, "Arrow"),
	F_AMETHYST_ARROWTIPS(ItemID.AMETHYST_ARROWHEADS, Skill.FLETCHING, "Arrow"),
	F_DRAGON_ARROWTIPS(ItemID.DRAGON_ARROWHEADS, Skill.FLETCHING, "Arrow"),
	// Bolts
	BRONZE_BOLTS(ItemID.XBOWS_CROSSBOW_BOLTS_BRONZE_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	BLURITE_BOLTS(ItemID.XBOWS_CROSSBOW_BOLTS_BLURITE_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	KEBBIT_BOLTS(ItemID.HUNTINGBEAST_SPIKE, Skill.FLETCHING, "Bolts"),
	IRON_BOLTS(ItemID.XBOWS_CROSSBOW_BOLTS_IRON_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	SILVER_BOLTS(ItemID.XBOWS_CROSSBOW_BOLTS_SILVER_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	STEEL_BOLTS(ItemID.XBOWS_CROSSBOW_BOLTS_STEEL_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	MITHRIL_BOLTS(ItemID.XBOWS_CROSSBOW_BOLTS_MITHRIL_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	BROAD_BOLTS(ItemID.SLAYER_BROAD_BOLT_UNFINISHED, Skill.FLETCHING, "Bolts"),
	ADAMANT_BOLTS(ItemID.XBOWS_CROSSBOW_BOLTS_ADAMANTITE_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	SUNLIGHT_ANTLER_BOLTS(ItemID.HUNTING_ANTELOPESUN_HORN, Skill.FLETCHING, "Bolts"),
	RUNE_BOLTS(ItemID.XBOWS_CROSSBOW_BOLTS_RUNITE_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	MOONLIGHT_ANTLER_BOLTS(ItemID.HUNTING_ANTELOPEMOON_HORN, Skill.FLETCHING, "Bolts"),
	DRAGON_BOLTS(ItemID.DRAGON_BOLTS_UNFEATHERED, Skill.FLETCHING, "Bolts"),
	// Stocks
	F_WOODEN_STOCK(ItemID.XBOWS_CROSSBOW_STOCK_WOOD, Skill.FLETCHING, "Stock"),
	F_OAK_STOCK(ItemID.XBOWS_CROSSBOW_STOCK_OAK, Skill.FLETCHING, "Stock"),
	F_WILLOW_STOCK(ItemID.XBOWS_CROSSBOW_STOCK_WILLOW, Skill.FLETCHING, "Stock"),
	F_TEAK_STOCK(ItemID.XBOWS_CROSSBOW_STOCK_TEAK, Skill.FLETCHING, "Stock"),
	F_MAPLE_STOCK(ItemID.XBOWS_CROSSBOW_STOCK_MAPLE, Skill.FLETCHING, "Stock"),
	F_MAHOGANY_STOCK(ItemID.XBOWS_CROSSBOW_STOCK_MAHOGANY, Skill.FLETCHING, "Stock"),
	F_YEW_STOCK(ItemID.XBOWS_CROSSBOW_STOCK_YEW, Skill.FLETCHING, "Stock"),
	F_MAGIC_STOCK(ItemID.XBOWS_CROSSBOW_STOCK_MAGIC, Skill.FLETCHING, "Stock"),
	// Unstrung Crossbows
	F_BRONZE_CROSSBOW_U(ItemID.XBOWS_CROSSBOW_UNSTRUNG_BRONZE, Skill.FLETCHING, "Unstrung Crossbow"),
	F_BLURITE_CROSSBOW_U(ItemID.XBOWS_CROSSBOW_UNSTRUNG_BLURITE, Skill.FLETCHING, "Unstrung Crossbow"),
	F_IRON_CROSSBOW_U(ItemID.XBOWS_CROSSBOW_UNSTRUNG_IRON, Skill.FLETCHING, "Unstrung Crossbow"),
	F_STEEL_CROSSBOW_U(ItemID.XBOWS_CROSSBOW_UNSTRUNG_STEEL, Skill.FLETCHING, "Unstrung Crossbow"),
	F_MITHRIL_CROSSBOW_U(ItemID.XBOWS_CROSSBOW_UNSTRUNG_MITHRIL, Skill.FLETCHING, "Unstrung Crossbow"),
	F_ADAMANTITE_CROSSBOW_U(ItemID.XBOWS_CROSSBOW_UNSTRUNG_ADAMANTITE, Skill.FLETCHING, "Unstrung Crossbow"),
	F_RUNITE_CROSSBOW_U(ItemID.XBOWS_CROSSBOW_UNSTRUNG_RUNITE, Skill.FLETCHING, "Unstrung Crossbow"),
	F_DRAGON_CROSSBOW_U(ItemID.XBOWS_CROSSBOW_UNSTRUNG_DRAGON, Skill.FLETCHING, "Unstrung Crossbow"),
	// Battlestaves
	F_CELASTRUS_BARK(ItemID.CELASTRUS_WOOD, Skill.FLETCHING, "Other"),
	// Javelin Heads
	BRONZE_JAVELIN_HEADS(ItemID.BRONZE_JAVELIN_HEAD, Skill.FLETCHING, "Javelin Heads"),
	IRON_JAVELIN_HEADS(ItemID.IRON_JAVELIN_HEAD, Skill.FLETCHING, "Javelin Heads"),
	STEEL_JAVELIN_HEADS(ItemID.STEEL_JAVELIN_HEAD, Skill.FLETCHING, "Javelin Heads"),
	MITHRIL_JAVELIN_HEADS(ItemID.MITHRIL_JAVELIN_HEAD, Skill.FLETCHING, "Javelin Heads"),
	ADAMANT_JAVELIN_HEADS(ItemID.ADAMANT_JAVELIN_HEAD, Skill.FLETCHING, "Javelin Heads"),
	RUNE_JAVELIN_HEADS(ItemID.RUNE_JAVELIN_HEAD, Skill.FLETCHING, "Javelin Heads"),
	AMETHYST_JAVELIN_HEADS(ItemID.AMETHYST_JAVELIN_HEAD, Skill.FLETCHING, "Javelin Heads"),
	DRAGON_JAVELIN_HEADS(ItemID.DRAGON_JAVELIN_HEAD, Skill.FLETCHING, "Javelin Heads"),
	/**
	 * Hunter
	 */
	H_LOGS(ItemID.LOGS, Skill.HUNTER, "Bird houses"),
	BIRD_HOUSE(ItemID.BIRDHOUSE_NORMAL, Skill.HUNTER, "Bird houses"),
	H_OAK_LOGS(ItemID.OAK_LOGS, Skill.HUNTER, "Bird houses"),
	OAK_BIRD_HOUSE(ItemID.BIRDHOUSE_OAK, Skill.HUNTER, "Bird houses"),
	H_WILLOW_LOGS(ItemID.WILLOW_LOGS, Skill.HUNTER, "Bird houses"),
	WILLOW_BIRD_HOUSE(ItemID.BIRDHOUSE_WILLOW, Skill.HUNTER, "Bird houses"),
	H_TEAK_LOGS(ItemID.TEAK_LOGS, Skill.HUNTER, "Bird houses"),
	TEAK_BIRD_HOUSE(ItemID.BIRDHOUSE_TEAK, Skill.HUNTER, "Bird houses"),
	H_MAPLE_LOGS(ItemID.MAPLE_LOGS, Skill.HUNTER, "Bird houses"),
	MAPLE_BIRD_HOUSE(ItemID.BIRDHOUSE_MAPLE, Skill.HUNTER, "Bird houses"),
	H_MAHOGANY_LOGS(ItemID.MAHOGANY_LOGS, Skill.HUNTER, "Bird houses"),
	MAHOGANY_BIRD_HOUSE(ItemID.BIRDHOUSE_MAHOGANY, Skill.HUNTER, "Bird houses"),
	H_YEW_LOGS(ItemID.YEW_LOGS, Skill.HUNTER, "Bird houses"),
	YEW_BIRD_HOUSE(ItemID.BIRDHOUSE_YEW, Skill.HUNTER, "Bird houses"),
	H_MAGIC_LOGS(ItemID.MAGIC_LOGS, Skill.HUNTER, "Bird houses"),
	MAGIC_BIRD_HOUSE(ItemID.BIRDHOUSE_MAGIC, Skill.HUNTER, "Bird houses"),
	H_REDWOOD_LOGS(ItemID.REDWOOD_LOGS, Skill.HUNTER, "Bird houses"),
	REDWOOD_BIRD_HOUSE(ItemID.BIRDHOUSE_REDWOOD, Skill.HUNTER, "Bird houses"),
	/**
	 * Firemaking
	 */
	FM_LOGS(ItemID.LOGS, Skill.FIREMAKING, "logs"),
	FM_ACHEY_TREE_LOGS(ItemID.ACHEY_TREE_LOGS, Skill.FIREMAKING, "logs"),
	FM_OAK_LOGS(ItemID.OAK_LOGS, Skill.FIREMAKING, "logs"),
	FM_WILLOW_LOGS(ItemID.WILLOW_LOGS, Skill.FIREMAKING, "logs"),
	FM_TEAK_LOGS(ItemID.TEAK_LOGS, Skill.FIREMAKING, "logs"),
	FM_ARCTIC_PINE_LOGS(ItemID.ARCTIC_PINE_LOG, Skill.FIREMAKING, "logs"),
	FM_MAPLE_LOGS(ItemID.MAPLE_LOGS, Skill.FIREMAKING, "logs"),
	FM_MAHOGANY_LOGS(ItemID.MAHOGANY_LOGS, Skill.FIREMAKING, "logs"),
	FM_YEW_LOGS(ItemID.YEW_LOGS, Skill.FIREMAKING, "logs"),
	FM_BLISTERWOOD_LOGS(ItemID.BLISTERWOOD_LOGS, Skill.FIREMAKING, "logs"),
	FM_MAGIC_LOGS(ItemID.MAGIC_LOGS, Skill.FIREMAKING, "logs"),
	FM_REDWOOD_LOGS(ItemID.REDWOOD_LOGS, Skill.FIREMAKING, "logs"),
	/**
	 * Thieving
	 */
	WINTER_SQUIRK(ItemID.OSMAN_SQUIRK_WINTER, Skill.THIEVING, "Squirks"),
	WINTER_SQUIRKJUICE(ItemID.OSMAN_SQUIRK_J_WINTER, Skill.THIEVING, "Squirks"),
	SPRING_SQUIRK(ItemID.OSMAN_SQUIRK_SPRING, Skill.THIEVING, "Squirks"),
	SPRING_SQUIRKJUICE(ItemID.OSMAN_SQUIRK_J_SPRING, Skill.THIEVING, "Squirks"),
	AUTUMN_SQUIRK(ItemID.OSMAN_SQUIRK_AUTUMN, Skill.THIEVING, "Squirks"),
	AUTUMN_SQUIRKJUICE(ItemID.OSMAN_SQUIRK_J_AUTUMN, Skill.THIEVING, "Squirks"),
	SUMMER_SQUIRK(ItemID.OSMAN_SQUIRK_SUMMER, Skill.THIEVING, "Squirks"),
	SUMMER_SQUIRKJUICE(ItemID.OSMAN_SQUIRK_J_SUMMER, Skill.THIEVING, "Squirks"),
	;

	private final int itemID;
	private final Skill skill;
	private final String category;
	private final int[] itemIds;
	private final boolean byDose;

	@Setter
	// Stores the item composition info we use since we don't operate on the game thread
	private ItemInfo itemInfo = null;

	@Setter
	private Activity selectedActivity;

	private static final Multimap<Skill, ExperienceItem> SKILL_MAP = ArrayListMultimap.create();
	private static final Map<Integer, ExperienceItem> ITEM_ID_MAP = new HashMap<>();

	static
	{
		for (ExperienceItem i : values())
		{
			Skill s = i.getSkill();
			SKILL_MAP.put(s, i);
			for (final int id : i.itemIds)
			{
				ITEM_ID_MAP.put(id, i);
			}
		}
	}

	ExperienceItem(int itemID, Skill skill)
	{
		this(itemID, skill, "NA");
	}

	ExperienceItem(int itemID, Skill skill, String category)
	{
		this.itemID = itemID;
		this.category = category;
		this.skill = skill;
		this.itemIds = new int[]{itemID};
		this.byDose = false;
	}

	ExperienceItem(Skill skill, boolean byDose, int... itemIds)
	{
		this.category = "NA";
		this.skill = skill;
		this.itemIds = itemIds;
		this.itemID = itemIds[0];
		this.byDose = byDose;
	}

	public static Collection<ExperienceItem> getBySkill(Skill skill)
	{
		Collection<ExperienceItem> items = SKILL_MAP.get(skill);
		if (items == null)
		{
			items = new ArrayList<>();
		}

		return items;
	}

	public static ExperienceItem getByItemId(int id)
	{
		return ITEM_ID_MAP.get(id);
	}

	/**
	 * Attaches the Item Composition to each ExperienceItem on client initial load
	 * May be a better way to do this
	 *
	 * @param m ItemManager
	 */
	public static void prepareItemCompositions(ItemManager m)
	{
		for (ExperienceItem i : values())
		{
			if (i.itemInfo != null)
			{
				return;
			}

			final ItemComposition c = m.getItemComposition(i.getItemID());
			i.itemInfo = new ItemInfo(c.getName(), c.isStackable());
		}
	}

	public boolean isStackable()
	{
		return itemInfo != null && itemInfo.isStackable();
	}
}
